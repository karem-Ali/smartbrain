{"version":3,"sources":["components/Logo/brain.svg","components/Navigation/Navigation.js","components/Logo/Logo.js","components/SignIn/SignIn.js","components/Register/Register.js","components/FaceRecognation/FaceRecognation.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRoutechange","isSigned","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","src","logo","alt","SignIn","props","onEmailchange","e","setState","email","target","value","onPasswordchange","password","onSubmit","fetch","method","body","JSON","stringify","state","headers","then","response","json","user","id","console","log","loaduser","this","htmlFor","type","onChange","name","Component","Register","onNamechange","FaceRecognation","image","box","top","toprow","right","rightcol","bottom","bottomrow","left","leftcol","ImageLinkForm","onInputchange","onButtonsubmit","Rank","entries","app","Clarifai","App","apiKey","particleoptions","particles","number","density","enable","value_area","data","joined","route","input","calculateFaceRecognation","clarifiFace","outputs","regions","region_info","bounding_box","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","imgurl","models","predict","FACE_DETECT_MODEL","count","Object","assign","catch","error","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.82f951c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.014560c0.svg\";","import React from 'react'\n\n   const Navigation=({onRoutechange,isSigned})=> {\n       if(isSigned){\n        return (\n            <nav style={{display:'flex', justifyContent:'flex-end'}}>\n                <p onClick={()=>onRoutechange('signout')}className=\"f3 link dim black underline pa3 pointer \">signout</p>\n            </nav>\n        )\n       }else{\n        return (\n            <nav style={{display:'flex', justifyContent:'flex-end'}}>\n                <p onClick={()=>onRoutechange('signin')}className=\"f3 link dim black underline pa3 pointer \">SignIn</p>\n                <p onClick={()=>onRoutechange('register')}className=\"f3 link dim black underline pa3 pointer \">Register</p>\n\n            </nav>\n            \n        )\n       }\n    \n}\nexport default Navigation\n","import React from 'react'\nimport Tilt from 'react-tilt'\nimport './logo.css'\n import logo from './brain.svg'\n\n   const Logo=()=> {\n    return (\n        <div className=\"ma4 mt0\">\n            <Tilt className=\"Tilt br2 shadow-2 pointer\" options={{ max : 35 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner pa3\"> <img  style={{paddingTop:'5px'}}src={logo} alt='logo' /> </div>\n            </Tilt>\n        </div>\n    )\n}\nexport default Logo\n","import React ,{Component} from 'react'\n   class SignIn extends Component {\n       constructor(props){\n           super(props)\n           this.state={\n               email:'',\n               password:''\n           }\n       }\n       onEmailchange=(e)=>{\n            this.setState({\n                email:e.target.value\n            })\n       }\n       onPasswordchange=(e)=>{\n        this.setState({\n            password:e.target.value\n        })\n   }\n   onSubmit=()=>{\n       fetch('http://localhost:3001/signin',\n       {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        body:JSON.stringify({\n            email:this.state.email,\n            password:this.state.password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n            }\n        }).then(response=> response.json())\n        .then(user=>{\n            if(user[0].id){\n                console.log(user[0].id)\n                this.props.loaduser(user[0])\n                this.props.onRoutechange('home')\n            }\n        })\n   }\n       render() {\n        const {onRoutechange}=this.props\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                <div className=\"measure \">\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                    <legend className=\"f3 fw6 ph0 mh0\">Sign In</legend>\n                    <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\"  htmlFor=\"email-address\">Email</label>\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" onChange={this.onEmailchange} name=\"email-address\"  id=\"email-address\" />\n                    </div>\n                    <div className=\"mv3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" onChange={this.onPasswordchange} name=\"password\"  id=\"password\" />\n                    </div>\n                </fieldset>\n                <div className=\"\">\n                    <input  onClick={this.onSubmit}className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\n                </div>\n                <div className=\"lh-copy mt3\">\n                    <p  onClick={()=>onRoutechange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                </div>\n                </div>\n             </main>\n          </article>\n          \n        )\n          \n       }\n    \n}\nexport default SignIn\n","import React ,{Component} from 'react'\n   class Register extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            email:'',\n            password:'',\n            name:''\n        }\n    }\n    onEmailchange=(e)=>{\n         this.setState({\n             email:e.target.value\n         })\n    }\n    onPasswordchange=(e)=>{\n     this.setState({\n         password:e.target.value\n     })\n}\nonNamechange=(e)=>{\n    this.setState({\n        name:e.target.value\n    })\n }\nonSubmit=()=>{\n    fetch('http://localhost:3001/register',\n    {\n     method: 'POST', // *GET, POST, PUT, DELETE, etc.\n     body:JSON.stringify({\n         email:this.state.email,\n         password:this.state.password,\n         name:this.state.name\n     }),\n     headers: {\n       'Content-Type': 'application/json'\n         }\n     }).then(response=> response.json())\n     .then(user=>{\n         if(user){\n             this.props.loaduser(user)\n             this.props.onRoutechange('home')\n\n         }\n     })\n}\n       render(){\n        const {onRoutechange}=this.props\n\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\">\n                    <main className=\"pa4 black-80\">\n                    <div className=\"measure \">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f3 fw6 ph0 mh0\">Register</legend>\n                        <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\"  htmlFor=\"name\">Name</label>\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" onChange={this.onNamechange} type=\"text\" name=\"name\"  id=\"name\" />\n                        </div>\n                        <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\"  htmlFor=\"email-address\">Email</label>\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" onChange={this.onEmailchange} type=\"email\" name=\"email-address\"  id=\"email-address\" />\n                        </div>\n                        <div className=\"mv3\">\n                        <label className=\"db fw6 lh-copy f6\"  htmlFor=\"password\">Password</label>\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" onChange={this.onPasswordchange} type=\"password\" name=\"password\"  id=\"password\" />\n                        </div>\n                    </fieldset>\n                    <div className=\"\">\n                        <input  onClick={this.onSubmit}className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\n                    </div>\n                    \n                    </div>\n                </main>\n              </article>\n              \n            )\n       }\n    \n}\nexport default Register\n","import React from 'react'\nimport './FaceRecognation.css'\n   const FaceRecognation=({image,box})=> {\n    return (\n        <div className=\"center ma\"> \n        <div className=\"mt2 absolute\">\n            <img id='imgrecognation' src={image} width='500px' height='auto'/>\n            <div className=\"boundery-box\" style={{top:box.toprow,right:box.rightcol,bottom:box.bottomrow,left:box.leftcol}}></div>\n        </div>     \n        </div>\n    )\n}\nexport default FaceRecognation\n","import React from 'react'\nimport './ImageLinkForm.css'\n   const ImageLinkForm=({onInputchange,onButtonsubmit})=> {\n    return (\n        <div>\n            <p className=\"f3 center\">\n                {'this is magic brain detect the face try it !'}\n            </p>\n            <div className=\"center\">  \n            <div className=\"pa4 form center br3 shadow-5\">\n            <input  className=\"f4  pa2 w-70 center\"type=\"text\" onChange={onInputchange} />\n                <button className=\"w-30 grow f4 link pb3 pv2 dib white bg-light-purple \"onClick={onButtonsubmit}>Detect</button>\n            </div>\n               \n            </div>\n            \n        </div>\n    )\n}\nexport default ImageLinkForm\n","import React from 'react'\nimport './Rank.css'\n   const Rank=({name,entries})=> {\n    return (\n       <div>\n           <div className=\"white f1 center\">\n                {`${name}your current rank is #${entries}`}\n           </div>\n       </div>\n    )\n}\nexport default Rank\n","import React,{Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport SignIn from './components/SignIn/SignIn'\nimport Register from './components/Register/Register'\nimport FaceRecognation from'./components/FaceRecognation/FaceRecognation'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport Particles from 'react-particles-js'\nimport Clarifai from 'clarifai'\nconst app = new Clarifai.App({\n  apiKey: 'a589da912e29434e96b0d9e5a13c970b'\n });\n const particleoptions= {\n  particles: {\n    number:{\n      value: 130,\n      density:{\n        enable:true,\n        value_area:630\n      }\n    }\n  }\n     \n  }\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state={\n      input:'',\n      imgurl:'',\n      box:{},\n      route:'signin',\n      isSigned:false,\n      user:{\n        name:'',\n        email:'',\n        password:'',\n        entries:0,\n        joined: ''\n      }\n    }\n  }\n  loaduser=(data)=>{\n    this.setState({\n      user:{\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        password:data.password,\n        entries:data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  onRoutechange=(route)=>{\n    if(route ==='signout'){\n      this.setState({\n        isSigned:false\n      })\n    }else if(route === 'home'){\n      this.setState({\n        isSigned:true\n      })\n\n    }\n    this.setState({\n      route:route\n    })\n  }\n  onInputchange=(e)=>{\n    this.setState({\n      input:e.target.value\n    })\n  }\n  calculateFaceRecognation=(data)=>{\n    const clarifiFace=data.outputs[0].data.regions[0].region_info.bounding_box\n    const image=document.getElementById('imgrecognation')\n    const width=Number(image.width)\n    const height=Number(image.height)\n    return{\n      leftcol:clarifiFace.left_col* width,\n      toprow:clarifiFace.top_row *height,\n      rightcol: width -(clarifiFace.right_col *width),\n      bottomrow: height -(clarifiFace.bottom_row *height)\n    }\n   \n  }\n  displayFaceBox=(box)=>{\n    this.setState({box:box})\n  }\n  onButtonsubmit=()=>{\n    this.setState({\n      imgurl:this.state.input,\n    })\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => {\n      if(response) {\n        fetch('http://localhost:3001/image',{\n          method: 'put', // *GET, POST, PUT, DELETE, etc.\n          body:JSON.stringify({\n             id:this.state.user.id   \n        }),\n        headers: {\n          'Content-Type': 'application/json'\n            }\n      }).then(response =>response.json())\n        .then(count=>{\n          this.setState(Object.assign(this.state.user,{entries:count}))\n        })\n      }\n     \n      this.displayFaceBox(this.calculateFaceRecognation(response))\n    })\n    .catch(error=>console.log('unable'))\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles  className=\"particles\" params={particleoptions} />\n        <Navigation isSigned={this.state.isSigned} onRoutechange={this.onRoutechange} />\n        { this.state.route ==='home' ? \n        <>\n         <Logo />\n         <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n         <ImageLinkForm onInputchange={this.onInputchange} onButtonsubmit={this.onButtonsubmit}/>\n        \n        <FaceRecognation box={this.state.box} image={this.state.imgurl}/> \n        </>\n        :(\n        this.state.route ==='signin' ?  <SignIn loaduser={this.loaduser} onRoutechange={this.onRoutechange} /> \n        : <Register  loaduser={this.loaduser} onRoutechange={this.onRoutechange} />\n        )\n        \n      }\n\n      </div>\n    );\n  }\n  \n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}